{"version":3,"sources":["items.js","DropDown.js","index.js"],"names":["items","id","value","DropDown","props","handleSelectItem","item","selection","state","selectedItems","some","current","removedSelection","filter","setState","push","isItemInSelection","find","clearSelection","toggle","open","this","selectedSomeItem","length","className","tabIndex","role","onClick","map","e","stopPropagation","React","Component","App","Item","ReactDOM","render","document","getElementById"],"mappings":"4KAiEeA,EAjED,CACV,CACIC,GAAI,EACJC,MAAO,SAEX,CACID,GAAI,EACJC,MAAO,gBAEX,CACID,GAAI,EACJC,MAAO,iBAEX,CACID,GAAI,EACJC,MAAO,aAEX,CACID,GAAI,EACJC,MAAO,WAEX,CACID,GAAI,EACJC,MAAO,gBAEX,CACID,GAAI,EACJC,MAAO,aAEX,CACID,GAAI,EACJC,MAAO,YAEX,CACID,GAAI,EACJC,MAAO,kBAEX,CACID,GAAI,GACJC,MAAO,UAEX,CACID,GAAI,GACJC,MAAO,QAEX,CACID,GAAI,GACJC,MAAO,cAEX,CACID,GAAI,GACJC,MAAO,YAGX,CACID,GAAI,GACJC,MAAO,WAEX,CACID,GAAI,GACJC,MAAO,kB,2CC8DAC,E,kDAnHX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAOVC,iBAAmB,SAACC,GAChB,IAAMC,EAAY,EAAKC,MAAMC,cAC7B,GAAIF,EAAUG,MAAK,SAAAC,GAAO,OAAIA,EAAQV,KAAOK,EAAKL,MAK7C,CACD,IAAMW,EAAmBL,EAAUM,QAAO,SAAAF,GAAO,OAAIA,EAAQV,KAAOK,EAAKL,MACzE,EAAKa,SAAS,CACVL,cAAeG,SAPnBL,EAAUQ,KAAKT,GACf,EAAKQ,SAAS,CACVL,cAAeF,KAbT,EAuBlBS,kBAAoB,SAACV,GAEjB,QADkB,EAAKE,MAAMC,cACfQ,MAAK,SAAAN,GAAO,OAAIA,EAAQV,KAAOK,EAAKL,OAzBpC,EA8BlBiB,eAAiB,WACb,EAAKJ,SAAS,CACVL,cAAe,MAhCL,EAqClBU,OAAS,SAACjB,GACN,EAAKY,SAAS,CACVM,MAAOlB,KArCX,EAAKM,MAAQ,CACTY,MAAM,EACNX,cAAe,IAJL,E,qDA2CT,IAAD,OACET,EAAQqB,KAAKjB,MAAMJ,MACrBsB,EAAmBD,KAAKb,MAAMC,cAAcc,OAAS,EACzD,OACC,sBAAKC,UAAU,UAAf,UAEI,sBACAA,UAAU,SACVC,SAAY,EACZC,KAAK,SACLC,QAAS,kBAAM,EAAKR,OAAO,EAAKX,MAAMY,OAJtC,UAOI,qBAAKI,UAAU,gBAAf,SAGQF,EAEI,qBAAKE,UAAU,uBAAf,SACCH,KAAKb,MAAMC,cAAcmB,KAAI,SAAAtB,GAAI,OAC9B,yBAAQkB,UAAU,0BAA0BG,QAAS,SAACE,GACnDA,EAAEC,kBACF,EAAKzB,iBAAiBC,IAFzB,UAGG,sBAAMkB,UAAU,uBAAhB,SAAwClB,EAAKJ,QAC7C,cAAC,IAAD,YAOT,uBAAOsB,UAAU,kBAAjB,uCAGV,qBAAKA,UAAU,WAAf,SACGH,KAAKb,MAAMY,KAAO,cAAC,IAAD,IAAmB,cAAC,IAAD,SAK5C,8BACKE,GACD,wBAAQE,UAAU,cAAcG,QAASN,KAAKH,eAA9C,qBAKJG,KAAKb,MAAMY,MACR,qBAAKI,UAAU,gBAAf,SACI,oBAAIA,UAAU,QAAd,SACKxB,EAAM4B,KAAI,SAAAtB,GAAI,OACX,oBAAIkB,UAAU,WAAd,SACI,yBAASG,QAAS,kBAAM,EAAKtB,iBAAiBC,IAAOkB,UAAU,oBAA/D,UACI,+BAAOlB,EAAKJ,QACZ,qCAAQ,EAAKc,kBAAkBV,IAAS,cAAC,IAAD,0B,GAlGrDyB,IAAMC,WCDvBC,EAAM,WACR,OACA,cAAC,EAAD,CAAUjC,MAAOkC,KAIrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6e70afd4.chunk.js","sourcesContent":["const items = [\r\n    {\r\n        id: 1,\r\n        value: \"Shrek\"\r\n    },\r\n    {\r\n        id: 2,\r\n        value: \"Wonder Woman\"\r\n    },\r\n    {\r\n        id: 3,\r\n        value: \"Casino Royale\"\r\n    },\r\n    {\r\n        id: 4,\r\n        value: \"King Kong\"\r\n    },\r\n    {\r\n        id: 5,\r\n        value: \"Friends\"\r\n    },\r\n    {\r\n        id: 6,\r\n        value: \"Harry Potter\"\r\n    },\r\n    {\r\n        id: 7,\r\n        value: \"Apollo 11\"\r\n    },\r\n    {\r\n        id: 8,\r\n        value: \"Godzilla\"\r\n    },\r\n    {\r\n        id: 9,\r\n        value: \"The Lego Movie\"\r\n    },\r\n    {\r\n        id: 10,\r\n        value: \"Naruto\"\r\n    },\r\n    {\r\n        id: 11,\r\n        value: \"2012\"\r\n    },\r\n    {\r\n        id: 12,\r\n        value: \"La La Land\"\r\n    },\r\n    {\r\n        id: 13,\r\n        value: \"Parasite\"\r\n    }\r\n    ,\r\n    {\r\n        id: 14,\r\n        value: \"Titanic\"\r\n    },\r\n    {\r\n        id: 15,\r\n        value: \"Spirited Away\"\r\n    }\r\n    \r\n]\r\n\r\nexport default items","import React from 'react'\r\nimport \"./CSS/DropDown.css\"\r\nimport {IoIosArrowDown} from 'react-icons/io'\r\nimport {IoIosArrowUp} from 'react-icons/io'\r\nimport {IoIosCheckmark} from 'react-icons/io'\r\nimport {IoIosCloseCircleOutline} from 'react-icons/io'\r\nclass DropDown extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            selectedItems: [] //state for all selected items\r\n        }\r\n    }\r\n    //function handle on click an item\r\n    handleSelectItem = (item) => {\r\n        const selection = this.state.selectedItems\r\n        if(!selection.some(current => current.id === item.id)){\r\n            selection.push(item)\r\n            this.setState({\r\n                selectedItems: selection\r\n            })\r\n        }else{\r\n            const removedSelection = selection.filter(current => current.id !== item.id)\r\n            this.setState({\r\n                selectedItems: removedSelection\r\n            })\r\n        }\r\n    }\r\n    //helper function to check if the clicked item is already selected\r\n    isItemInSelection = (item) => {\r\n        const selection = this.state.selectedItems\r\n        if (selection.find(current => current.id === item.id)){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    clearSelection = () => {\r\n        this.setState({\r\n            selectedItems: []\r\n        })\r\n    }\r\n\r\n    //helper function to open/close the selection menu\r\n    toggle = (value) =>{\r\n        this.setState({\r\n            open: !value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const items = this.props.items\r\n        var selectedSomeItem = this.state.selectedItems.length > 0\r\n        return(\r\n         <div className=\"wrapper\">\r\n             {/* Header Bar Start */}\r\n             <div\r\n             className=\"header\"\r\n             tabIndex = {0}\r\n             role=\"button\"\r\n             onClick={() => this.toggle(this.state.open)}\r\n            \r\n             >\r\n                 <div className=\"selectedItems\">\r\n                     \r\n                     {\r\n                         selectedSomeItem ? \r\n                         (\r\n                             <div className=\"display-selected-div\">\r\n                             {this.state.selectedItems.map(item => (\r\n                                 <button className=\"display-selected-button\" onClick={(e) => {\r\n                                    e.stopPropagation() \r\n                                    this.handleSelectItem(item)}}>\r\n                                    <span className=\"selected-items-value\">{item.value}</span>\r\n                                    <IoIosCloseCircleOutline />\r\n                                </button>\r\n                             ))}\r\n                             </div>\r\n                         )\r\n                         \r\n                         \r\n                         : <label className=\"selectIndicator\">Select Favourite Movies</label>\r\n                     }\r\n                 </div>\r\n                 <div className=\"openIcon\">\r\n                   {this.state.open ? <IoIosArrowUp /> : <IoIosArrowDown />}\r\n                   \r\n                 </div>\r\n                \r\n             </div>\r\n             <div>\r\n                 {selectedSomeItem &&                  \r\n                 <button className=\"clearButton\" onClick={this.clearSelection}>Clear</button>}\r\n             </div>\r\n             {/* Header Bar Ends*/}\r\n            {/* Selection Menu Start Here */}\r\n            \r\n            {this.state.open && (\r\n                <div className=\"listItems-div\">\r\n                    <ul className=\"lists\">\r\n                        {items.map(item => (\r\n                            <li className=\"listItem\">\r\n                                <button  onClick={() => this.handleSelectItem(item)} className=\"selectItem-button\">\r\n                                    <span>{item.value}</span>\r\n                                    <span> {this.isItemInSelection(item) && <IoIosCheckmark/> }</span>\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n\r\n            )}\r\n            {/* Selection Menu Ends Here */}\r\n             \r\n\r\n\r\n         </div>   \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DropDown","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Item from './items'\nimport DropDown from './DropDown'\n\nconst App = () => {\n    return (\n    <DropDown items={Item} />\n     )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}